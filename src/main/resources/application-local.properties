#spring.kafka.consumer.properties.spring.json.add.type.headers=false
#spring.kafka.consumer.group-id=serviceA-group
#spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.StringSerializer
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.bootstrap-servers=localhost:9092
#
#spring.kafka.producer.properties.spring.json.add.type.headers=false
#spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.producer.bootstrap-servers=localhost:9092

# Producer properties
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.group-id=group_id
topic.name.producer=topico.comando.teste

# Common Kafka Properties
auto.create.topics.enable=true

spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.username=username
spring.data.mongodb.password=password
spring.data.mongodb.database=dbname

kafka.topic.order=local_order_topic

#kafka.topic.groupID=ownerapi_group